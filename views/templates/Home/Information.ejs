<article class="flex flex-col justify-center items-center h-auto mt-64 md:mt-0 relative">

  <img src="/images/code_icon.png" alt="Oldal szinb√≥lum" class="mt-48 w-[86px] h-[86px]" />

  <div class="mt-20 text-3xl sm:text-3xl md:text-4xl lg:text-6xl 2xl:text-8xl text-white font-bold font-mono text-center">
    Mi az
    <span class="colored--span text-3xl sm:text-3xl md:text-4xl lg:text-6xl 2xl:text-8xl bg-gradient-to-b from-fuchsia-400 to-fuchsia-700 ... text-transparent bg-clip-text font-bold font-mono">
      algoritmiz√°l√°s
    </span>
    ?
  </div>

  <span class="mt-12 w-full md:w-[60%] text-center p-3 text-white text-opacity-50 text-xl md:text-[32px] font-bold font-mono">
    Algoritmiz√°l√°s azt jelenti, hogy egy adott probl√©m√°t l√©p√©sekre bontunk, majd egy terv k√©sz√≠t√©s√©vel megpr√≥b√°ljuk megoldani azokat. Ez olyan, mintha egy t√©rk√©pet k√©sz√≠ten√©nk a probl√©ma megold√°s√°hoz. El≈ësz√∂r meg√©rtj√ºk, hogy mi a probl√©ma, majd kital√°ljuk, hogyan tudn√°nk megoldani. Ezt a tervet h√≠vjuk algoritmusnak.
  </span>

  <div class="w-[80%] flex flex-nowrap justify-center xl:justify-between flex-col xl:flex-row gap-4 xl:gap-20 mt-24 mb-12 text-2xl text-white/70 font-bold font-mono">
    <span class="flex items-center justify-between md:justify-center text-center flex-row w-full gap-3 lg:w-auto xl:-translate-y-20">
      Gondolkod√°s <span class="text-5xl">üß†</span>
    </span>

    <span class="flex items-center justify-between md:justify-center text-center flex-row w-full gap-3 lg:w-auto">
      Hibamegold√°s <span class="text-5xl">üí°</span>
    </span>

    <span class="flex items-center justify-between md:justify-center text-center flex-row w-full gap-3 lg:w-auto">
      Hat√©konys√°g <span class="text-5xl">üèÉ</span>
    </span>

    <span class="flex items-center justify-between md:justify-center text-center flex-row w-full gap-3 lg:w-auto xl:-translate-y-20">
      T√ºrelem <span class="text-5xl">‚è±Ô∏è</span>
    </span>
  </div>

  <script>
    const animationElementA = (element) => {
      const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            element.classList.add("animate-once") 
            element.classList.add("animate-fade-down") 
          }
        })
      }, {
        root: null,
        rootMargin: '0px',
        threshold: 0.5,
        
      })

      observer.observe(element)
    }

    animationElementA(document.querySelector(".colored--span"))
  </script>
</article>
